{"version":3,"sources":["components/data.js","styles/InputStyle.js","components/Input.js","styles/TableStyle.js","components/Table.js","App.js","index.js"],"names":["birds","name","members","id","styles","theme","back","cursor","marginRight","display","inputWrapper","blueBtn","backgroundColor","color","withStyles","classes","moveInputValueBack","inputValue","handleChange","updateData","className","onClick","InputLabel","htmlFor","TextField","type","onChange","value","Button","table","width","tableWrapper","padding","boxSizing","close","fontWeight","greenBtn","AnimalsTable","props","state","map","bird","concat","Math","random","setState","clearInputValue","e","target","selectRow","row","rowCopy","Object","assign","uploadDataBack","getBirds","removeData","filter","sort","a","b","selected","this","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableSortLabel","active","TableBody","key","scope","aria-hidden","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e53b2ee.chunk.js","sourcesContent":[" const birds = () => ([\n  {\n    name: \"Albatrosses\",\n    members: \"Wandering albatross\",\n    id: 1,\n  },\n  {\n    name: \"Cormorants\",\n    members: \"Antarctic shag\",\n    id: 2,\n  },\n  {\n    name: \"Diving petrels\",\n    members: \"South Georgia diving petrel\",\n    id: 3,\n  },\n  {\n    name: \"Ducks, geese and swans\",\n    members: \"Yellow-billed pintail\",\n    id: 4,\n  },\n  {\n    name: \"Gulls\",\n    members: \"Kelp gull\",\n    id: 5,\n  },\n  {\n    name: \"Penguins\",\n    members: \"King penguin\",\n    id: 6,\n  },\n])\n\nexport default birds\n","const styles = theme => ({\n  back: {\n    cursor: \"pointer\",\n    marginRight: 10,\n    display: \"inline-block\"\n  },\n  inputWrapper:{\n    display: \"inline-block\"\n  },\n  blueBtn:{\n    backgroundColor: \"#3f51b5\",\n    color: \"#fff\",\n    '&:hover': {\n      backgroundColor: \"#3f51b5\",\n    }\n  }\n})\n\nexport default styles","import React from 'react';\nimport { TextField, Button, InputLabel } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../styles/InputStyle'\n\nconst Input = ({classes, moveInputValueBack, inputValue, handleChange, updateData}) => (\n  <>\n    <span\n      className={classes.back}\n      onClick={moveInputValueBack}>&#10226;\n    </span>\n    <div className={classes.inputWrapper}>\n      <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\n      <TextField\n        type=\"text\"\n        name=\"nameId\"\n        id=\"id\"\n        onChange={handleChange}\n        value={inputValue.name}\n      />\n    </div>\n    <Button\n      color=\"primary\"\n      onClick={updateData}\n      className={classes.blueBtn}\n    >\n      Save\n    </Button>\n  </>\n)\n\nexport default withStyles(styles)(Input)\n\n","const styles = theme => ({\n  table: {\n    width: \"60%\",\n    cursor: \"pointer\",\n  },\n  tableWrapper: {\n    padding: \"50px 30px\",\n    boxSizing: \"border-box\",\n  },\n  close: {\n    color: \"red\",\n    cursor: \"pointer\",\n    display: \"inline-block\",\n  },\n  name:{\n    fontWeight: \"bold\",\n  },\n  greenBtn: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    '&:hover': {\n      backgroundColor: \"green\",\n    }\n  }\n});\n\nexport default styles","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TableSortLabel, Button } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport getBirds from './data'\nimport Input from './Input'\nimport styles from '../styles/TableStyle'\n\nclass AnimalsTable extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      inputValue: {name: '', id: null, members: \"Wandering albatross\"},\n      selected: '',\n      birds: getBirds(),\n    }\n  }\n\n  updateData = () => {\n    let birds = this.state.birds\n    let inputValue = this.state.inputValue\n\n    if (!inputValue['id']) {\n      birds = birds.concat([{name: inputValue.name, id: Math.random(), members: \"Penguins\"}])\n    } else {\n      birds.map(bird => bird.id === inputValue.id ? bird.name = inputValue.name : null )\n    }\n\n    this.setState({ birds })\n    this.clearInputValue()\n  }\n\n  clearInputValue = () => {\n    this.setState({ inputValue: {name: '', id: null, members: \"Wandering albatross\" } })\n  }\n\n  handleChange = (e) => {\n    let inputValue = this.state.inputValue\n    inputValue.name = e.target.value\n    this.setState({ inputValue })\n  }\n\n  selectRow = (row) => {\n    let rowCopy = Object.assign({}, row)\n    this.setState({ inputValue: rowCopy })\n  }\n\n  moveInputValueBack = () => {\n    let birds = this.state.birds\n    let inputValue = this.state.inputValue\n    birds.map(bird => bird.id === inputValue.id ? inputValue.name = bird.name : null)\n    this.setState({ birds })\n  }\n\n  uploadDataBack = () => {\n    this.setState({birds: getBirds() })\n  }\n\n  removeData = (id) => {\n    let birds = this.state.birds\n    birds = birds.filter(bird =>  bird.id !== id)\n    this.setState({ birds })\n  }\n\n  sort = (name) => {\n    let birds = this.state.birds\n\n    birds = birds.sort((a, b) => {\n      if (a[name] < b[name]) return - 1\n      if (a[name] > b.name) return  1\n      return 0\n    })\n    this.setState({ birds })\n  }\n\n  render () {\n    const {inputValue, birds} = this.state\n    const {classes} = this.props\n\n    return (\n      <>\n        <TableContainer\n          component={Paper}\n          className={classes.tableWrapper}\n        >\n          <h1>Birds of Antarctica</h1>\n          <Input\n            inputValue={inputValue}\n            handleChange={this.handleChange}\n            moveInputValueBack={this.moveInputValueBack}\n            updateData={this.updateData}\n          />\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <TableSortLabel\n                    active={true}\n                    onClick={() => this.sort('id')}\n                  >\n                  Id\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell>\n                  <TableSortLabel\n                    active={true}\n                    onClick={() => this.sort('name')}\n                  >\n                    Name\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell>\n                  <TableSortLabel\n                    active={true}\n                    onClick={() => this.sort('members')}\n                  >\n                    Members\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    className={classes.greenBtn}\n                    onClick={this.uploadDataBack}>Upload Back</Button>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {birds && birds.map(row => (\n                <TableRow\n                  key={row.id}>\n                  <TableCell\n                    onClick={() => this.selectRow(row)}\n                  >{row.id}\n                  </TableCell>\n                  <TableCell\n                    onClick={() => this.selectRow(row)}\n                    className={classes.name}\n                  >\n                    {row.name}\n                  </TableCell>\n                  <TableCell\n                    onClick={() => this.selectRow(row)}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    {row.members}\n                  </TableCell>\n                  <TableCell>\n                    <span\n                      onClick={ () => this.removeData(row.id) }\n                      className={classes.close}\n                      aria-hidden=\"true\"\n                    >\n                     <CloseIcon />\n                    </span>\n                  </TableCell>\n\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(AnimalsTable)\n","import React from 'react';\nimport AnimalsTable  from './components/Table';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AnimalsTable/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}